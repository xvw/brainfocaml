(*
 * A Simple BF Interpreter (teaching material)
 *
 * Copyright (C) 2017  Xavier Van de Woestyne <xaviervdw@gmail.com>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *)


let header =
  Format.sprintf {gcc| 
/** This code was generated by : https://github.com/xvw/brainfocaml
 *  You should not read this code... it is Ugly and Unreadble !
 */
 #include <stdio.h>
 #define MEMSIZE %d
 int main() {
 int p[MEMSIZE] = { 0 };
 int i; i=0;
|gcc}

let footer  = "\nreturn 0; \n}"


let rec translate buffer = function
  | Parser.Memory x -> Format.sprintf "%s\np[i]+=%d;" buffer x
  | Parser.Cursor x -> Format.sprintf "%s\ni+=%d;" buffer x
  | Parser.Nullify  -> Format.sprintf "%s\np[i]=0;" buffer
  | Parser.Output   -> Format.sprintf "%s\nputchar(p[i]);" buffer
  | Parser.Input    -> Format.sprintf "%s\np[i]=getchar();" buffer
  | Parser.Loop xs  ->
     Format.sprintf
       "%s\nwhile(p[i]!=0){\n%s\n}"
       buffer
       (List.fold_left translate "" xs)
    
           

let to_c_code size sequence =
  let tokens = Parser.tokens sequence in
  (header size)
  ^ (List.fold_left translate "" tokens)
  ^ footer
